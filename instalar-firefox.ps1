# DeepAlias Hunter Pro - Nova Extens√£o
# Script de instala√ß√£o e teste para Firefox

Write-Host "üöÄ DEEPALIAS HUNTER PRO - NOVA EXTENS√ÉO" -ForegroundColor Cyan
Write-Host "=========================================" -ForegroundColor Cyan

$extensionPath = "C:\Users\drdan\CURSOS_TESTE\CRIANDO\SCRIPTS\busca\nova-extensao"

# 1. Verificar arquivos essenciais
Write-Host "`nüìã VERIFICANDO ARQUIVOS..." -ForegroundColor Yellow

$requiredFiles = @(
    "manifest.json",
    "background.js",
    "popup.html",
    "popup.css",
    "popup.js"
)

$allFilesExist = $true
foreach ($file in $requiredFiles) {
    $filePath = Join-Path $extensionPath $file
    if (Test-Path $filePath) {
        $size = (Get-Item $filePath).Length
        Write-Host "‚úÖ $file ($size bytes)" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file - AUSENTE!" -ForegroundColor Red
        $allFilesExist = $false
    }
}

# Verificar √≠cones
$iconCount = (Get-ChildItem "$extensionPath\icons\*.png" | Measure-Object).Count
if ($iconCount -eq 4) {
    Write-Host "‚úÖ √çcones (4 arquivos)" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è √çcones incompletos ($iconCount/4 arquivos)" -ForegroundColor Yellow
}

if (-not $allFilesExist) {
    Write-Host "`n‚ùå ERRO: Arquivos essenciais ausentes!" -ForegroundColor Red
    exit 1
}

# 2. Validar manifest.json
Write-Host "`nüîç VALIDANDO MANIFEST..." -ForegroundColor Yellow

try {
    $manifestContent = Get-Content (Join-Path $extensionPath "manifest.json") -Raw
    $manifest = $manifestContent | ConvertFrom-Json
    
    Write-Host "‚úÖ Nome: $($manifest.name)" -ForegroundColor Green
    Write-Host "‚úÖ Vers√£o: $($manifest.version)" -ForegroundColor Green
    Write-Host "‚úÖ Manifest Version: $($manifest.manifest_version)" -ForegroundColor Green
    
    if ($manifest.manifest_version -eq 2) {
        Write-Host "‚úÖ Manifest V2 (Firefox compat√≠vel)" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Manifest V$($manifest.manifest_version) - verifique compatibilidade" -ForegroundColor Yellow
    }
    
} catch {
    Write-Host "‚ùå Erro ao validar manifest: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# 3. Instru√ß√µes de instala√ß√£o
Write-Host "`nü¶ä INSTALA√á√ÉO NO FIREFOX:" -ForegroundColor Cyan
Write-Host "============================" -ForegroundColor Cyan

# Abrir pasta da extens√£o
Write-Host "üìÇ Abrindo pasta da extens√£o..." -ForegroundColor Yellow
Start-Process "explorer.exe" -ArgumentList $extensionPath

Write-Host "`nüìã PASSOS PARA INSTALAR:" -ForegroundColor White
Write-Host "1. Abra o Firefox" -ForegroundColor White
Write-Host "2. Digite: about:debugging" -ForegroundColor White
Write-Host "3. Clique em 'Este Firefox'" -ForegroundColor White
Write-Host "4. Clique em 'Carregar extens√£o tempor√°ria...'" -ForegroundColor White
Write-Host "5. Selecione o arquivo 'manifest.json' na pasta que abriu" -ForegroundColor White
Write-Host "6. Clique em 'Abrir'" -ForegroundColor White

Write-Host "`nüß™ COMO TESTAR:" -ForegroundColor Cyan
Write-Host "================" -ForegroundColor Cyan
Write-Host "1. Verifique se a extens√£o aparece na lista sem erros" -ForegroundColor White
Write-Host "2. Clique no √≠cone da extens√£o na barra de ferramentas" -ForegroundColor White
Write-Host "3. Digite um username de teste (ex: 'github')" -ForegroundColor White
Write-Host "4. Clique em 'Buscar'" -ForegroundColor White
Write-Host "5. Observe o progresso e os resultados" -ForegroundColor White
Write-Host "6. Teste as fun√ß√µes de parar e limpar" -ForegroundColor White
Write-Host "7. Teste a exporta√ß√£o dos resultados" -ForegroundColor White

Write-Host "`nüí° RECURSOS DA EXTENS√ÉO:" -ForegroundColor Cyan
Write-Host "=========================" -ForegroundColor Cyan
Write-Host "‚úÖ Interface moderna e responsiva" -ForegroundColor Green
Write-Host "‚úÖ Busca em 8 plataformas principais" -ForegroundColor Green
Write-Host "‚úÖ Progresso visual em tempo real" -ForegroundColor Green
Write-Host "‚úÖ Resultados organizados (encontrados primeiro)" -ForegroundColor Green
Write-Host "‚úÖ Exporta√ß√£o para clipboard" -ForegroundColor Green
Write-Host "‚úÖ Abertura de URLs com clique" -ForegroundColor Green
Write-Host "‚úÖ Valida√ß√£o de entrada" -ForegroundColor Green
Write-Host "‚úÖ Status de conex√£o" -ForegroundColor Green

Write-Host "`n‚ö†Ô∏è IMPORTANTE:" -ForegroundColor Yellow
Write-Host "- Esta √© uma extens√£o TEMPOR√ÅRIA" -ForegroundColor White
Write-Host "- Ser√° removida quando o Firefox for fechado" -ForegroundColor White
Write-Host "- Os resultados s√£o simulados para demonstra√ß√£o" -ForegroundColor White

Write-Host "`nüîß DEBUGGING:" -ForegroundColor Cyan
Write-Host "===============" -ForegroundColor Cyan
Write-Host "Se houver problemas:" -ForegroundColor White
Write-Host "1. Abra o Console do Desenvolvedor (F12)" -ForegroundColor White
Write-Host "2. V√° para a aba 'Console'" -ForegroundColor White
Write-Host "3. Verifique mensagens de erro" -ForegroundColor White
Write-Host "4. Na p√°gina about:debugging, clique em 'Inspecionar' na extens√£o" -ForegroundColor White

# 4. Aguardar instala√ß√£o
Write-Host "`n‚è≥ AGUARDANDO INSTALA√á√ÉO..." -ForegroundColor Yellow
Write-Host "Pressione qualquer tecla ap√≥s instalar a extens√£o..." -ForegroundColor Yellow
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

# 5. Feedback
Write-Host "`nüìù TESTE REALIZADO:" -ForegroundColor Cyan
Write-Host "A extens√£o foi instalada com sucesso? (S/N): " -NoNewline -ForegroundColor Yellow
$installSuccess = Read-Host

if ($installSuccess -eq "S") {
    Write-Host "O popup abriu corretamente? (S/N): " -NoNewline -ForegroundColor Yellow
    $popupSuccess = Read-Host
    
    Write-Host "A busca funcionou? (S/N): " -NoNewline -ForegroundColor Yellow
    $searchSuccess = Read-Host
    
    Write-Host "Os resultados apareceram? (S/N): " -NoNewline -ForegroundColor Yellow
    $resultsSuccess = Read-Host
}

# 6. An√°lise final
Write-Host "`nüìä RESULTADO FINAL:" -ForegroundColor Cyan
Write-Host "=====================" -ForegroundColor Cyan

if ($installSuccess -eq "S") {
    Write-Host "‚úÖ Instala√ß√£o bem-sucedida" -ForegroundColor Green
    
    if ($popupSuccess -eq "S") {
        Write-Host "‚úÖ Interface funcionando" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Problema na interface" -ForegroundColor Red
    }
    
    if ($searchSuccess -eq "S") {
        Write-Host "‚úÖ Busca funcionando" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Problema na busca" -ForegroundColor Red
    }
    
    if ($resultsSuccess -eq "S") {
        Write-Host "‚úÖ Resultados funcionando" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Problema nos resultados" -ForegroundColor Red
    }
    
    if ($popupSuccess -eq "S" -and $searchSuccess -eq "S" -and $resultsSuccess -eq "S") {
        Write-Host "`nüéâ SUCESSO TOTAL!" -ForegroundColor Green
        Write-Host "A extens√£o est√° 100% funcional!" -ForegroundColor Green
    } else {
        Write-Host "`n‚ö†Ô∏è Sucesso parcial" -ForegroundColor Yellow
        Write-Host "Algumas fun√ß√µes precisam de ajustes" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Falha na instala√ß√£o" -ForegroundColor Red
    Write-Host "Verifique erros no console do Firefox" -ForegroundColor Yellow
}

Write-Host "`nüèÅ TESTE CONCLU√çDO!" -ForegroundColor Cyan
Write-Host "=========================================" -ForegroundColor Cyan
